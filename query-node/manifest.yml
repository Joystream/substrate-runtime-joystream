version: '3.0'
description: Joystream query-node manifest file for olympia
repository: https://github.com/Joystream/joystream
hydraVersion: "3"
dataSource:
  kind: substrate
  chain: joystream
entities:
  - generated/graphql-server/dist/src/modules/**/*.model.js
typegen:
  metadata:
    source: ${TYPEGEN_WS_URI}
  events:
    # Membership
    - members.MembershipBought
    - members.MemberProfileUpdated
    - members.MemberAccountsUpdated
    - members.MemberVerificationStatusUpdated
    - members.InvitesTransferred
    - members.MemberInvited
    - members.StakingAccountAdded
    - members.StakingAccountConfirmed
    - members.StakingAccountRemoved
    - members.InitialInvitationCountUpdated
    - members.MembershipPriceUpdated
    - members.ReferralCutUpdated
    - members.InitialInvitationBalanceUpdated
    - members.LeaderInvitationQuotaUpdated
    # Working groups - use Storage Working Group as a reference group (all groups emit the same events)
    - storageWorkingGroup.OpeningAdded
    - storageWorkingGroup.AppliedOnOpening
    - storageWorkingGroup.OpeningFilled
    - storageWorkingGroup.LeaderSet
    - storageWorkingGroup.WorkerRoleAccountUpdated
    - storageWorkingGroup.LeaderUnset
    - storageWorkingGroup.WorkerStartedLeaving
    - storageWorkingGroup.WorkerExited
    - storageWorkingGroup.TerminatedWorker
    - storageWorkingGroup.TerminatedLeader
    - storageWorkingGroup.StakeSlashed
    - storageWorkingGroup.StakeDecreased
    - storageWorkingGroup.StakeIncreased
    - storageWorkingGroup.ApplicationWithdrawn
    - storageWorkingGroup.OpeningCanceled
    - storageWorkingGroup.BudgetSet
    - storageWorkingGroup.WorkerRewardAccountUpdated
    - storageWorkingGroup.WorkerRewardAmountUpdated
    - storageWorkingGroup.StatusTextChanged
    - storageWorkingGroup.BudgetSpending
    - storageWorkingGroup.RewardPaid
    - storageWorkingGroup.NewMissedRewardLevelReached
  # Forum
    - forum.CategoryCreated
    - forum.CategoryArchivalStatusUpdated
    - forum.CategoryDeleted
    - forum.ThreadCreated
    - forum.ThreadModerated
    # - forum.ThreadUpdated FIXME: Not emitted by the runtime
    - forum.ThreadTitleUpdated
    - forum.ThreadDeleted
    - forum.ThreadMoved
    - forum.VoteOnPoll
    - forum.PostAdded
    - forum.PostModerated
    - forum.PostDeleted
    - forum.PostTextUpdated
    - forum.PostReacted
    - forum.CategoryStickyThreadUpdate
    - forum.CategoryMembershipOfModeratorUpdated
  calls:
    - members.updateProfile
    - members.updateAccounts
    - forum.createThread
  outDir: ./mappings/generated/types
  customTypes:
    lib: '@joystream/types/augment/all/types'
    typedefsLoc: '../types/augment/all/defs.json'
mappings:
  # js module that exports the handler functions
  mappingsModule: mappings/lib
  # additinal libraries the processor loads
  # typically it is a module with event and extrinsic types generated by hydra-typegen
  imports:
    - mappings/lib/generated/types
  eventHandlers:
    # Membership module
    - event: members.MembershipBought
      handler: members_MembershipBought
    - event: members.MemberProfileUpdated
      handler: members_MemberProfileUpdated
    - event: members.MemberAccountsUpdated
      handler: members_MemberAccountsUpdated
    - event: members.MemberVerificationStatusUpdated
      handler: members_MemberVerificationStatusUpdated
    - event: members.InvitesTransferred
      handler: members_InvitesTransferred
    - event: members.MemberInvited
      handler: members_MemberInvited
    - event: members.StakingAccountAdded
      handler: members_StakingAccountAdded
    - event: members.StakingAccountConfirmed
      handler: members_StakingAccountConfirmed
    - event: members.StakingAccountRemoved
      handler: members_StakingAccountRemoved
    - event: members.InitialInvitationCountUpdated
      handler: members_InitialInvitationCountUpdated
    - event: members.MembershipPriceUpdated
      handler: members_MembershipPriceUpdated
    - event: members.ReferralCutUpdated
      handler: members_ReferralCutUpdated
    - event: members.InitialInvitationBalanceUpdated
      handler: members_InitialInvitationBalanceUpdated
    - event: members.LeaderInvitationQuotaUpdated
      handler: members_LeaderInvitationQuotaUpdated
    # Storage working group
    - event: storageWorkingGroup.OpeningAdded
      handler: workingGroups_OpeningAdded
    - event: storageWorkingGroup.AppliedOnOpening
      handler: workingGroups_AppliedOnOpening
    - event: storageWorkingGroup.OpeningFilled
      handler: workingGroups_OpeningFilled
    - event: storageWorkingGroup.LeaderSet
      handler: workingGroups_LeaderSet
    - event: storageWorkingGroup.WorkerRoleAccountUpdated
      handler: workingGroups_WorkerRoleAccountUpdated
    - event: storageWorkingGroup.LeaderUnset
      handler: workingGroups_LeaderUnset
    - event: storageWorkingGroup.WorkerExited
      handler: workingGroups_WorkerExited
    - event: storageWorkingGroup.TerminatedWorker
      handler: workingGroups_TerminatedWorker
    - event: storageWorkingGroup.TerminatedLeader
      handler: workingGroups_TerminatedLeader
    - event: storageWorkingGroup.StakeSlashed
      handler: workingGroups_StakeSlashed
    - event: storageWorkingGroup.StakeDecreased
      handler: workingGroups_StakeDecreased
    - event: storageWorkingGroup.StakeIncreased
      handler: workingGroups_StakeIncreased
    - event: storageWorkingGroup.ApplicationWithdrawn
      handler: workingGroups_ApplicationWithdrawn
    - event: storageWorkingGroup.OpeningCanceled
      handler: workingGroups_OpeningCanceled
    - event: storageWorkingGroup.BudgetSet
      handler: workingGroups_BudgetSet
    - event: storageWorkingGroup.WorkerRewardAccountUpdated
      handler: workingGroups_WorkerRewardAccountUpdated
    - event: storageWorkingGroup.WorkerRewardAmountUpdated
      handler: workingGroups_WorkerRewardAmountUpdated
    - event: storageWorkingGroup.StatusTextChanged
      handler: workingGroups_StatusTextChanged
    - event: storageWorkingGroup.BudgetSpending
      handler: workingGroups_BudgetSpending
    - event: storageWorkingGroup.RewardPaid
      handler: workingGroups_RewardPaid
    - event: storageWorkingGroup.NewMissedRewardLevelReached
      handler: workingGroups_NewMissedRewardLevelReached
    - event: storageWorkingGroup.WorkerStartedLeaving
      handler: workingGroups_WorkerStartedLeaving
    # Forum working group
    - event: forumWorkingGroup.OpeningAdded
      handler: workingGroups_OpeningAdded
    - event: forumWorkingGroup.AppliedOnOpening
      handler: workingGroups_AppliedOnOpening
    - event: forumWorkingGroup.OpeningFilled
      handler: workingGroups_OpeningFilled
    - event: forumWorkingGroup.LeaderSet
      handler: workingGroups_LeaderSet
    - event: forumWorkingGroup.WorkerRoleAccountUpdated
      handler: workingGroups_WorkerRoleAccountUpdated
    - event: forumWorkingGroup.LeaderUnset
      handler: workingGroups_LeaderUnset
    - event: forumWorkingGroup.WorkerExited
      handler: workingGroups_WorkerExited
    - event: forumWorkingGroup.TerminatedWorker
      handler: workingGroups_TerminatedWorker
    - event: forumWorkingGroup.TerminatedLeader
      handler: workingGroups_TerminatedLeader
    - event: forumWorkingGroup.StakeSlashed
      handler: workingGroups_StakeSlashed
    - event: forumWorkingGroup.StakeDecreased
      handler: workingGroups_StakeDecreased
    - event: forumWorkingGroup.StakeIncreased
      handler: workingGroups_StakeIncreased
    - event: forumWorkingGroup.ApplicationWithdrawn
      handler: workingGroups_ApplicationWithdrawn
    - event: forumWorkingGroup.OpeningCanceled
      handler: workingGroups_OpeningCanceled
    - event: forumWorkingGroup.BudgetSet
      handler: workingGroups_BudgetSet
    - event: forumWorkingGroup.WorkerRewardAccountUpdated
      handler: workingGroups_WorkerRewardAccountUpdated
    - event: forumWorkingGroup.WorkerRewardAmountUpdated
      handler: workingGroups_WorkerRewardAmountUpdated
    - event: forumWorkingGroup.StatusTextChanged
      handler: workingGroups_StatusTextChanged
    - event: forumWorkingGroup.BudgetSpending
      handler: workingGroups_BudgetSpending
    - event: forumWorkingGroup.RewardPaid
      handler: workingGroups_RewardPaid
    - event: forumWorkingGroup.NewMissedRewardLevelReached
      handler: workingGroups_NewMissedRewardLevelReached
    - event: forumWorkingGroup.WorkerStartedLeaving
      handler: workingGroups_WorkerStartedLeaving
    # Membership working group
    - event: membershipWorkingGroup.OpeningAdded
      handler: workingGroups_OpeningAdded
    - event: membershipWorkingGroup.AppliedOnOpening
      handler: workingGroups_AppliedOnOpening
    - event: membershipWorkingGroup.OpeningFilled
      handler: workingGroups_OpeningFilled
    - event: membershipWorkingGroup.LeaderSet
      handler: workingGroups_LeaderSet
    - event: membershipWorkingGroup.WorkerRoleAccountUpdated
      handler: workingGroups_WorkerRoleAccountUpdated
    - event: membershipWorkingGroup.LeaderUnset
      handler: workingGroups_LeaderUnset
    - event: membershipWorkingGroup.WorkerExited
      handler: workingGroups_WorkerExited
    - event: membershipWorkingGroup.TerminatedWorker
      handler: workingGroups_TerminatedWorker
    - event: membershipWorkingGroup.TerminatedLeader
      handler: workingGroups_TerminatedLeader
    - event: membershipWorkingGroup.StakeSlashed
      handler: workingGroups_StakeSlashed
    - event: membershipWorkingGroup.StakeDecreased
      handler: workingGroups_StakeDecreased
    - event: membershipWorkingGroup.StakeIncreased
      handler: workingGroups_StakeIncreased
    - event: membershipWorkingGroup.ApplicationWithdrawn
      handler: workingGroups_ApplicationWithdrawn
    - event: membershipWorkingGroup.OpeningCanceled
      handler: workingGroups_OpeningCanceled
    - event: membershipWorkingGroup.BudgetSet
      handler: workingGroups_BudgetSet
    - event: membershipWorkingGroup.WorkerRewardAccountUpdated
      handler: workingGroups_WorkerRewardAccountUpdated
    - event: membershipWorkingGroup.WorkerRewardAmountUpdated
      handler: workingGroups_WorkerRewardAmountUpdated
    - event: membershipWorkingGroup.StatusTextChanged
      handler: workingGroups_StatusTextChanged
    - event: membershipWorkingGroup.BudgetSpending
      handler: workingGroups_BudgetSpending
    - event: membershipWorkingGroup.RewardPaid
      handler: workingGroups_RewardPaid
    - event: membershipWorkingGroup.NewMissedRewardLevelReached
      handler: workingGroups_NewMissedRewardLevelReached
    - event: membershipWorkingGroup.WorkerStartedLeaving
      handler: workingGroups_WorkerStartedLeaving
    # Content directory working group
    - event: contentDirectoryWorkingGroup.OpeningAdded
      handler: workingGroups_OpeningAdded
    - event: contentDirectoryWorkingGroup.AppliedOnOpening
      handler: workingGroups_AppliedOnOpening
    - event: contentDirectoryWorkingGroup.OpeningFilled
      handler: workingGroups_OpeningFilled
    - event: contentDirectoryWorkingGroup.LeaderSet
      handler: workingGroups_LeaderSet
    - event: contentDirectoryWorkingGroup.WorkerRoleAccountUpdated
      handler: workingGroups_WorkerRoleAccountUpdated
    - event: contentDirectoryWorkingGroup.LeaderUnset
      handler: workingGroups_LeaderUnset
    - event: contentDirectoryWorkingGroup.WorkerExited
      handler: workingGroups_WorkerExited
    - event: contentDirectoryWorkingGroup.TerminatedWorker
      handler: workingGroups_TerminatedWorker
    - event: contentDirectoryWorkingGroup.TerminatedLeader
      handler: workingGroups_TerminatedLeader
    - event: contentDirectoryWorkingGroup.StakeSlashed
      handler: workingGroups_StakeSlashed
    - event: contentDirectoryWorkingGroup.StakeDecreased
      handler: workingGroups_StakeDecreased
    - event: contentDirectoryWorkingGroup.StakeIncreased
      handler: workingGroups_StakeIncreased
    - event: contentDirectoryWorkingGroup.ApplicationWithdrawn
      handler: workingGroups_ApplicationWithdrawn
    - event: contentDirectoryWorkingGroup.OpeningCanceled
      handler: workingGroups_OpeningCanceled
    - event: contentDirectoryWorkingGroup.BudgetSet
      handler: workingGroups_BudgetSet
    - event: contentDirectoryWorkingGroup.WorkerRewardAccountUpdated
      handler: workingGroups_WorkerRewardAccountUpdated
    - event: contentDirectoryWorkingGroup.WorkerRewardAmountUpdated
      handler: workingGroups_WorkerRewardAmountUpdated
    - event: contentDirectoryWorkingGroup.StatusTextChanged
      handler: workingGroups_StatusTextChanged
    - event: contentDirectoryWorkingGroup.BudgetSpending
      handler: workingGroups_BudgetSpending
    - event: contentDirectoryWorkingGroup.RewardPaid
      handler: workingGroups_RewardPaid
    - event: contentDirectoryWorkingGroup.NewMissedRewardLevelReached
      handler: workingGroups_NewMissedRewardLevelReached
    - event: contentDirectoryWorkingGroup.WorkerStartedLeaving
      handler: workingGroups_WorkerStartedLeaving
    # Forum
    - event: forum.CategoryCreated
      handler: forum_CategoryCreated
    - event: forum.CategoryArchivalStatusUpdated
      handler: forum_CategoryArchivalStatusUpdated
    - event: forum.CategoryDeleted
      handler: forum_CategoryDeleted
    - event: forum.ThreadCreated
      handler: forum_ThreadCreated
    - event: forum.ThreadModerated
      handler: forum_ThreadModerated
    - event: forum.ThreadTitleUpdated
      handler: forum_ThreadTitleUpdated
    - event: forum.ThreadDeleted
      handler: forum_ThreadDeleted
    - event: forum.ThreadMoved
      handler: forum_ThreadMoved
    - event: forum.PostAdded
      handler: forum_PostAdded
    - event: forum.PostModerated
      handler: forum_PostModerated
    - event: forum.PostDeleted
      handler: forum_PostDeleted
    - event: forum.PostTextUpdated
      handler: forum_PostTextUpdated
    - event: forum.PostReacted
      handler: forum_PostReacted
    - event: forum.VoteOnPoll
      handler: forum_VoteOnPoll
    - event: forum.CategoryStickyThreadUpdate
      handler: forum_CategoryStickyThreadUpdate
    - event: forum.CategoryMembershipOfModeratorUpdated
      handler: forum_CategoryMembershipOfModeratorUpdated
  extrinsicHandlers:
    # infer defaults here
    #- extrinsic: Balances.Transfer
    #- extrinsic: Sudo.batchCall
    #  handler: handleSudoCall(DatabaseManager,SubstrateEvent)
  preBlockHooks:
  postBlockHooks:
